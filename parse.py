import cbg
import numpy as np

rattr2attr = {
  'maxHpAdditionRate': '生命加成',
  'debuffResist': '效果抵抗',
  'debuffEnhance': '效果命中',
  'maxHpAdditionVal': '生命',
  'critRateAdditionVal': '暴击',
  'attackAdditionRate': '攻击加成',
  'defenseAdditionRate': '防御加成',
  'critPowerAdditionVal': '暴击伤害',
  'speedAdditionVal': '速度',
  'defenseAdditionVal': '防御',
  'attackAdditionVal': '攻击',
}

attr2value = {
  '生命加成': 3, 
  '效果抵抗': 4, 
  '效果命中': 4, 
  '生命': 114, 
  '暴击': 3, 
  '攻击加成': 3, 
  '防御加成': 3, 
  '暴击伤害': 4, 
  '速度': 3, 
  '防御': 5, 
  '攻击': 27
}

yuhun_list = [
  [300032, "珍珠", "zhenzhu", "防御加成30%", "治疗时，目标获得不可驱散的护盾2回合，能吸收等同基础治疗30%的伤害。"], 
  [300033, "骰子鬼", "touzigui", "效果抵抗15%", "抵抗时，反击来源目标，该次反击提升50%伤害。未被控制时承受控制效果，增加25%行动条。"], 
  [300034, "蚌精", "bengjing", "效果命中15%", "战斗开始时，友方全体获得无法驱散的护盾1回合，能吸收等同生命上限10%的伤害。"], 
  [300035, "魅妖", "meiyao", "防御加成30%", "造成伤害时，有25%基础概率使目标混乱1回合。"], 
  [300036, "针女", "zhennv", "暴击15%", "暴击时，有40%概率对目标造成其生命上限10%的无视防御伤害，最高不超过攻击120%。"], 
  [300039, "返魂香", "fanhunxiang", "效果抵抗15%", "受到伤害时，有25%基础概率使伤害者眩晕1回合；对被嘲讽目标降低60%触发概率。"], 
  [300048, "狂骨", "kuanggu", "攻击加成15%", "造成伤害时，每拥有1点鬼火，提升8%伤害。"], 
  [300049, "幽谷响", "youguxiang", "效果抵抗15%", "抵抗控制效果时，有50%概率将该效果反弹给来源目标，且必定命中。"], 
  [300050, "土蜘蛛", "tuzhizhu", "唯一被动，对怪物造成伤害时，为其附加1层土蜘蛛印记，降低10%速度，并造成10%间接伤害，持续1回合。上限3层。", ""], 
  [300051, "胧车", "longche", "唯一被动，受到怪物攻击时，有50%概率增加30%行动条，单次攻击内最多触发1次。", ""], 
  [300052, "荒骷髅", "huangkulou", "唯一被动，提升10%对怪物伤害，若受到怪物伤害，提升伤害效果改为25%，持续1回合。", ""], 
  [300053, "地震鲶", "dizhennian", "唯一被动，与怪物的战斗开始时，获得60%减伤；每次受到伤害，将6%减伤转化为提升1.5%伤害，单次攻击内最多触发1次。", ""], 
  [300054, "蜃气楼", "shenqilou", "唯一被动，与怪物的战斗开始时，获得庇护。庇护会在消失后5回合重新获得。", ""], 
  [300073, "飞缘魔", "feiyuanmo", "效果命中15%", "附加负面状态时，无视30%总效果抵抗。"], 
  [300074, "兵主部", "bingzhubu", "攻击加成15%", "回合结束后，获得1层兵刃（增益，状态）。每层将在造成伤害时无视目标75点防御，上限3层。"], 
  [300075, "青女房", "qingnvfang", "暴击15%", "首次受到致命伤害时，移除所有增益和减益，恢复100%生命并使自身冰封1回合，期间提升100%防御、免疫所有减益。若冰封结束时仍存活，则再次恢复100%生命。每回目仅触发一次。"], 
  [300076, "涂佛", "tufo", "生命加成15%", "唯一效果。回合结束时，若本回合普攻或无法动作，使友方全体提升15%效果抵抗、伤害，维持2回合，自身提升双倍。"], 
  [300077, "鬼灵歌伎", "guilinggeji", "唯一被动，每对怪物造成5次伤害后，下一次对怪物造成伤害将会对其造成生命上限20%的无视防御伤害，最高不超过攻击的255%", ""], 
  [300002, "雪幽魂", "xueyouhun", "防御加成30%", "造成伤害时，有15%（若目标带有减速效果则为30%）基础概率冰冻1回合；受到攻击时，使攻击者减速30点，持续1回合。"], 
  [300003, "地藏像", "dizangxiang", "生命加成15%", "受到暴击时，自身100%、友方30%概率获得1回合护盾，能吸收10%生命上限的伤害；对被嘲讽目标降低60%触发概率。"], 
  [300004, "蝠翼", "fuyi", "攻击加成15%", "造成伤害时，附带20%吸血。"], 
  [300006, "涅槃之火", "niepanzhihuo", "生命加成15%", "行动结束时，若生命比例低于30%，治疗生命上限15%的生命。"], 
  [300007, "三味", "sanwei", "暴击15%", "任一友方承受控制效果时，使其提升30点速度，持续2回合，此增益效果不可驱散，可叠加2层。"], 
  [300008, "魍魉之匣", "wangliangzhixia", "效果抵抗15%", "造成伤害时，有25%基础概率随机附加眩晕、沉默、减疗40%、混乱，持续1回合。"], 
  [300009, "被服", "beifu", "生命加成15%", "30%减伤。"], 
  [300010, "招财猫", "zhaocaimao", "防御加成30%", "回合开始时，有50%的概率获得2点鬼火。"], 
  [300011, "反枕", "fanzhen", "防御加成30%", "造成伤害时，有23%基础概率使目标沉睡1回合。"], 
  [300012, "轮入道", "lunrudao", "攻击加成15%", "回合结束时，有20%概率获得新的回合。"], 
  [300013, "日女巳时", "rinvyishi", "防御加成30%", "造成伤害时，有20%概率击退目标30%行动条，若其带有增益状态、印记，触发概率提升10%。"], 
  [300014, "镜姬", "jingji", "生命加成15%", "受到伤害时，有30%概率造成100%反伤；对被嘲讽目标降低60%触发概率。"], 
  [300015, "钟灵", "zhongling", "生命加成15%", "造成伤害时，有10%基础概率使目标眩晕1回合。若敌方无人处于眩晕中，则基础概率改为20%。"], 
  [300018, "狰", "zheng", "攻击加成15%", "受到敌方伤害时，有35%概率反击；对被嘲讽目标降低60%触发概率。"], 
  [300019, "火灵", "huoling", "效果命中15%", "战斗开始时，获得3点鬼火。"], 
  [300020, "鸣屋", "mingwu", "攻击加成15%", "攻击时，若目标带有控制效果，提升45%伤害。"], 
  [300021, "薙魂", "zhihun", "生命加成15%", "唯一效果。友方被攻击时50%概率守护，使其中的单体伤害降低20%，再分担50%，直到攻击结束。每次攻击最多触发一次。"], 
  [300022, "心眼", "xinyan", "攻击加成15%", "造成伤害时，目标生命比例每降低15%，提升10%伤害。"], 
  [300023, "木魅", "mumei", "防御加成30%", "任何友方受到伤害时，有25%概率削减伤害者1点鬼火，单次攻击内最多触发1次；对被嘲讽目标降低60%触发概率。"], 
  [300024, "树妖", "shuyao", "生命加成15%", "治疗时，增加20%（若目标生命低于20%，改为增加50%）基础治疗。"], 
  [300026, "网切", "wangqie", "暴击15%", "攻击时，50%概率无视45%防御。"], 
  [300027, "阴摩罗", "yinmoluo", "攻击加成15%", "击杀目标时，获得3点鬼火。"], 
  [300029, "伤魂鸟", "shanghunniao", "暴击15%", "任一非怪物目标阵亡时，治疗生命上限20%的生命，并提升20%伤害（上限120%）直到战斗结束。"], 
  [300030, "破势", "poshi", "暴击15%", "造成伤害时，若目标生命比例高于70%，提升40%伤害。"], 
  [300031, "镇墓兽", "zhenmushou", "暴击15%", "生命比例每降低1%，提升暴击伤害的0.5%。"]
]

yunhuns_base_attr = {
  "珍珠": ("防御加成", 30),
  '骰子鬼': ('效果抵抗', 15),
  '蚌精': ('效果命中', 15),
  '魅妖': ('防御加成', 30),
  '针女': ('暴击', 15),
  '返魂香': ('效果抵抗', 15),
  '狂骨': ('攻击加成', 15),
  '幽谷响': ('效果抵抗', 15),
  '土蜘蛛': None,
  '胧车': None,
  '荒骷髅': None,
  '地震鲶': None,
  '蜃气楼': None,
  '飞缘魔': ('效果命中', 15),
  '兵主部': ('攻击加成', 15),
  '青女房': ('暴击', 15),
  '涂佛': ('生命加成', 15),
  '鬼灵歌伎': None,
  '雪幽魂': ('防御加成', 30),
  '地藏像': ('生命加成', 15),
  '蝠翼': ('攻击加成', 15),
  '涅槃之火': ('生命加成', 15),
  '三味': ('暴击', 15),
  '魍魉之匣': ('效果抵抗', 15),
  '被服': ('生命加成', 15),
  '招财猫': ('防御加成', 30),
  '反枕': ('防御加成', 30),
  '轮入道': ('攻击加成', 15),
  '日女巳时': ('防御加成', 30),
  '镜姬': ('生命加成', 15),
  '钟灵': ('生命加成', 15),
  '狰': ('攻击加成', 15),
  '火灵': ('效果命中', 15),
  '鸣屋': ('攻击加成', 15),
  '薙魂': ('生命加成', 15),
  '心眼': ('攻击加成', 15),
  '木魅': ('防御加成', 30),
  '树妖': ('生命加成', 15),
  '网切': ('暴击', 15),
  '阴摩罗': ('攻击加成', 15),
  '伤魂鸟': ('暴击', 15),
  '破势': ('暴击', 15),
  '镇墓兽': ('暴击', 15),
}


class Parser:
  def __init__(self, reqst):
    self.reqst = reqst

  
  def get_attrs_name(self):
    attrs_name = set()

    for value in self.reqst.values():
      attrs = value['attrs']
      for attr in attrs:
        attrs_name.add(attr[0])

    print(attrs_name)
    print(len(attrs_name))

  
  def get_rattrs_name(self):
    rattrs_name = set()

    for value in self.reqst.values():
      rattrs = value['rattr']
      for rattr in rattrs:
        rattrs_name.add(rattr[0])

    print(rattrs_name)
    print(len(rattrs_name))

  
  def get_base_value(self):
    value_map = {attr: [-np.inf, np.inf] for attr in rattr2attr.values()}
    for value in self.reqst.values():
      rattrs = value['rattr']
      rattrs_map = {}
      for rattr, rattr_v in rattrs:
        rattrs_map[rattr] = rattrs_map.get(rattr, 0) + rattr_v
      rattrs = rattrs_map

      attrs = value['attrs']
      attrs = {key: value for key, value in attrs}

      for rattr, rattr_v in rattrs.items():
        rattr_v = float(rattr_v)
        attr = rattr2attr[rattr]
        assert attr in attrs, '{} ... {}'.format(attr, attrs)

        attr_v = attrs[attr]
        attr_v = attr_v.replace('%', '')
        attr_v = float(attr_v)
        attr_v_less = attr_v - 0.5
        attr_v_more = attr_v + 0.5

        value_map[attr][0] = max(value_map[attr][0], attr_v_less / rattr_v)
        value_map[attr][1] = min(value_map[attr][1], attr_v_more / rattr_v)
        assert value_map[attr][1] >= value_map[attr][0], value_map[attr]

    print(value_map)


if __name__ == '__main__':
  reqst = cbg.yuhun('https://yys.cbg.163.com/cgi/mweb/equip/7/202007292101616-7-AVS8BKAONKILEO')
  parser = Parser(reqst)
  parser.get_attrs_name()
  parser.get_rattrs_name()
  parser.get_base_value()
